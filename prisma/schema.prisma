generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Project {
  id String @id @default(uuid()) @db.Uuid
  orgId String @db.Uuid
  name String
  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @default(now()) @db.Timestamp

  organization Organization @relation(fields: [orgId], references: [id])
}

model Organization {
  id String @id @default(uuid()) @db.Uuid
  name String
  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @default(now()) @db.Timestamp

  projects Project[]
  userAccounts UserAccount[]
  tokens Token[]
}

model UserAccount {
  id String @id @default(uuid()) @db.Uuid
  email String @unique
  password String
  orgId String @db.Uuid
  role String
  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @default(now()) @db.Timestamp

  organization Organization @relation(fields: [orgId], references: [id])
  tokens Token[]
}

model Token {
  id String @id @default(uuid()) @db.Uuid
  userId String @db.Uuid
  token String
  orgId String @db.Uuid
  type String
  fingerprint String?
  isValid Boolean @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @default(now()) @db.Timestamp

  user UserAccount @relation(fields: [userId], references: [id])
  organization Organization @relation(fields: [orgId], references: [id])
}